package com.example.demo.entity;

import java.time.OffsetDateTime;
import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.springframework.format.annotation.DateTimeFormat;

import lombok.Data;
import lombok.Getter;
import lombok.Setter;

@Data
@Entity
@Table(name = "PRODUCT", schema = "IMS")
public class Product {
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	//@GeneratedValue(generator = "custom-generator",strategy = GenerationType.IDENTITY)
	//@GenericGenerator(name = "custom-generator",strategy = "com.example.demo.util.IdGenerator")
	@Column(name = "PRODUCT_ID")
	private int prodId;
	@Column(name = "PROD_NAME")
	private String name;
	@Column(name = "PRICE_PER_UNIT")
	private double price;
	@Column(name = "DISCRIPTION")
	private String discription;
	@Column(name = "STOCK_LEVEL")
	private int stockLevel;
	@Column(name = "MANUFACTURE_DATE")
	private Date manDate;
	@Column(name = "EXPIRE_DATE")
	private Date expDate;
	@OneToOne(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
	@JoinColumn(name = "LOC_ID")
	private Location location;
	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
	@JoinColumn(name = "CATEGORY_ID")
	private Category category;
	@OneToOne(fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
	@JoinColumn(name = "SUB_CATAGORY_ID")
	private SubCategory subCategory;
	@ManyToOne
	private Inventory inventory;
	@Column(name = "NEXT_ARRIVAL")
	private Date nextArrival;
	
	public int getProdId() {
		return prodId;
	}
	public void setProdId(int prodId) {
		this.prodId = prodId;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public double getPrice() {
		return price;
	}
	public void setPrice(double price) {
		this.price = price;
	}
	public String getDiscription() {
		return discription;
	}
	public void setDiscription(String discription) {
		this.discription = discription;
	}
	public int getStockLevel() {
		return stockLevel;
	}
	public void setStockLevel(int stockLevel) {
		this.stockLevel = stockLevel;
	}
	public Date getManDate() {
		return manDate;
	}
	public void setManDate(Date manDate) {
		this.manDate = manDate;
	}
	public Date getExpDate() {
		return expDate;
	}
	public void setExpDate(Date expDate) {
		this.expDate = expDate;
	}
	public Location getLocation() {
		return location;
	}
	public void setLocation(Location location) {
		this.location = location;
	}
	public Category getCategory() {
		return category;
	}
	public void setCategory(Category category) {
		this.category = category;
	}
	public Inventory getInventory() {
		return inventory;
	}
	public void setInventory(Inventory inventory) {
		this.inventory = inventory;
	}
	public Date getNextArrival() {
		return nextArrival;
	}
	public void setNextArrival(Date nextArrival) {
		this.nextArrival = nextArrival;
	}
	
	public SubCategory getSubCategory() {
		return subCategory;
	}
	public void setSubCategory(SubCategory subCategory) {
		this.subCategory = subCategory;
	}
	@Override
	public String toString() {
		return "Product [prodId=" + prodId + ", name=" + name + ", price=" + price + ", discription=" + discription
				+ ", stockLevel=" + stockLevel + ", manDate=" + manDate + ", expDate=" + expDate + ", location="
				+ location + ", category=" + category + ", inventory=" + inventory + ", nextArrival=" + nextArrival
				+ "]";
	}
	
	
	
	

}
